<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wentixiaogege</title>
    <link>/</link>
    <description>Recent content on wentixiaogege</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright>
    <lastBuildDate>Mon, 26 Oct 2020 22:20:38 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Links</title>
      <link>/links/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/links/</guid>
      <description> title: &amp;lsquo;Links&amp;rsquo; date: 2017-08-02 layout: &amp;lsquo;resume&amp;rsquo; menu: &amp;lsquo;main&amp;rsquo; weight: 50 comments: false </description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Write something about you here.</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description></description>
    </item>
    
    <item>
      <title>How to Get Started With Numerai（如何开始使用Numerai）</title>
      <link>/post/how-to-get-started-with-numerai/</link>
      <pubDate>Mon, 26 Oct 2020 22:20:38 +0800</pubDate>
      
      <guid>/post/how-to-get-started-with-numerai/</guid>
      <description>&lt;p&gt;numerai 基本概念介绍，以及展示一个入门的程序代码~&lt;/p&gt;
&lt;p&gt;github：https://github.com/wentixiaogege/numerai【辛苦star！！】&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>今年参加PAKDD2020：阿里巴巴算法写的一个论文: A Voting-based Robust Model for Disk Failure Prediction</title>
      <link>/post/wenti-diskfailure-proposal/</link>
      <pubDate>Fri, 09 Oct 2020 21:50:25 +0800</pubDate>
      
      <guid>/post/wenti-diskfailure-proposal/</guid>
      <description></description>
    </item>
    
    <item>
      <title>用Hugo和Github Pages创建和部署个人博客</title>
      <link>/post/wenti-building-static-hugo-github/</link>
      <pubDate>Fri, 09 Oct 2020 21:41:02 +0800</pubDate>
      
      <guid>/post/wenti-building-static-hugo-github/</guid>
      <description>&lt;p&gt;Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。相较于Hexo和WordPress，Hugo的安装和配置都方便得多，生成页面的速度也是前两者无可比拟的。而Github Pages是github提供的静态网页托管服务，提供1GB的免费空间，可直接通过github仓库进行站点部署，十分方便。&lt;/p&gt;
&lt;p&gt;本站就是使用了Hugo和Github Pages来进行创建和部署的，下面来简单介绍一下部署过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>剑指Offer刷题全纪录(Python版)</title>
      <link>/post/wenti-algo-jianzhi-offer/</link>
      <pubDate>Fri, 09 Oct 2020 21:38:12 +0800</pubDate>
      
      <guid>/post/wenti-algo-jianzhi-offer/</guid>
      <description>&lt;p&gt;这篇文章是本人刷《剑指Offer》的记录，用Python实现的，也有一点点C++。&lt;/p&gt;
&lt;p&gt;都说数据结构与算法是程序猿的必修课，是任何时候都需要苦修的内功。好吧，作为一个非科班的半路出家的野生程序猿，我当然也得刷一刷数据结构和算法啊啊啊。其实早在两年前就听闻要多刷算法题，那时候没有形成良好的习惯，也没制定详细的计划，就很佛的刷了一些LeetCode，感觉现在也都忘得一干二净了。最近心血来潮，正好遇到一个成长平台期，就开始下决心刷算法题了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>探究用机器学习应对气候变化</title>
      <link>/post/wenti-ml-climate-change/</link>
      <pubDate>Fri, 09 Oct 2020 21:34:10 +0800</pubDate>
      
      <guid>/post/wenti-ml-climate-change/</guid>
      <description>&lt;p&gt;气候变化是人类面临的越来越严重的问题，相信大家对此都不陌生。全球变暖、冰川消融、海平面上升、极端天气事件频发……人类的生存正在逐渐受到威胁。科学家们已经从很多不同的角度对气候变化进行了深入的研究，提出了很多应对气候变化的策略。除此之外，大家有没想过，近些年火遍各行各业的机器学习（ML）和人工智能（AI）可以与气候变化碰撞出什么样的火花呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Catboost 入门介绍</title>
      <link>/post/wenti-ml-catboost/</link>
      <pubDate>Fri, 09 Oct 2020 21:32:52 +0800</pubDate>
      
      <guid>/post/wenti-ml-catboost/</guid>
      <description>&lt;p&gt;Catboost入门介绍与实例。&lt;/p&gt;
&lt;p&gt;用过sklearn进行机器学习的同学应该都知道，在用sklearn进行机器学习的时候，我们需要对类别特征进行预处理，如label encoding, one hot encoding等，因为sklearn无法处理类别特征，会报错。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RNN, LSTM和GRU</title>
      <link>/post/wenti-dl-lstm-gru/</link>
      <pubDate>Fri, 09 Oct 2020 21:31:09 +0800</pubDate>
      
      <guid>/post/wenti-dl-lstm-gru/</guid>
      <description>&lt;p&gt;普通的RNN对短时记忆比较敏感，如果输入序列很长，在反向传播期间，RNN 会面临梯度消失和梯度爆炸的问题。为解决这个问题，人们对RNN进行了很多改进，其中最有效的改进方式是引入门控机制， 于是就有了LSTM和GRU。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>机器学习中的概念漂移（Concept Drift）</title>
      <link>/post/wenti-ml-concept-drift/</link>
      <pubDate>Fri, 09 Oct 2020 21:30:09 +0800</pubDate>
      
      <guid>/post/wenti-ml-concept-drift/</guid>
      <description>机器学习中的概念漂移（Concept Drift）的理解与解决方法。
在一些情景下，𝑋X(输入)和𝑦y(输出)之间的映射关系𝑦=𝑓(𝑋)y=f(X)是随着时间变化的，在训练集和测试集上的𝑓f完全不一样，这样就会出现我们在离线测试调好的模型上线就不work的情况。
 In most challenging data analysis applications, data evolve over time and must be analyzed in near real time. Patterns and relations in such data often evolve over time, thus, models built for analyzing such data quickly become obsolete over time. In machine learning and data mining this phenomenon is referred to as concept drift.
— An overview of concept drift applications, 2016.
 wiki上对于concept drift的定义：
 In predictive analytics and machine learning, the concept drift means that the statistical properties of the target variable, which the model is trying to predict, change over time in unforeseen ways.</description>
    </item>
    
    <item>
      <title>在XGBoost和LightGBM中自定义损失函数</title>
      <link>/post/wenti-custom-loss-lgb-xgb/</link>
      <pubDate>Fri, 09 Oct 2020 21:27:36 +0800</pubDate>
      
      <guid>/post/wenti-custom-loss-lgb-xgb/</guid>
      <description>在LightGBM和XGBoost中的自定义损失函数（Custom Loss Function）。
Training loss and Validation loss  Training loss: This is the function that is optimized on the training data. For example, in a neural network binary classifier, this is usually the binary cross entropy. For the random forest classifier, this is the Gini impurity. The training loss is often called the “objective function” as well. The training loss in LightGBM is called objective.
Validation loss: This is the function that we use to evaluate the performance of our trained model on unseen data.</description>
    </item>
    
    <item>
      <title>新的GPU服务器环境配置--Ubuntu18.04&#43;CUDA10.0&#43;cuDNN7.6.5&#43;TensorFlow2.0安装笔记</title>
      <link>/post/wenti-linux-gpu-env-install/</link>
      <pubDate>Fri, 09 Oct 2020 21:18:12 +0800</pubDate>
      
      <guid>/post/wenti-linux-gpu-env-install/</guid>
      <description>&lt;p&gt;第一次安装CUDA的过程简直抓狂，中间出现了很多次莫名其妙的bug，踩了很多坑。比如装好了CUDA重启后进不去桌面系统了，直接黑屏、比如鼠标键盘都不work了、再比如装好了却安装不了TensorFlow-GPU……看了一圈网上的安装教程，发现还是官方指南真香了~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>/post/hello-world/</link>
      <pubDate>Fri, 09 Oct 2020 21:01:25 +0800</pubDate>
      
      <guid>/post/hello-world/</guid>
      <description>&lt;p&gt;Cut out summary from your post content here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/goisforlovers/</link>
      <pubDate>Fri, 09 Oct 2020 20:53:25 +0800</pubDate>
      
      <guid>/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme/</link>
      <pubDate>Fri, 09 Oct 2020 20:53:25 +0800</pubDate>
      
      <guid>/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/hugoisforlovers/</link>
      <pubDate>Fri, 09 Oct 2020 20:53:25 +0800</pubDate>
      
      <guid>/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Hugo 主题 Nuo 文章样式预览</title>
      <link>/post/hugo-nuo-post-preview/</link>
      <pubDate>Fri, 09 Oct 2020 20:53:25 +0800</pubDate>
      
      <guid>/post/hugo-nuo-post-preview/</guid>
      <description>&lt;p&gt;这篇文章集中说明本人博客主题所支持的 Markdown 语法和 Hugo Shortcodes 插件，你也可以在这里预览到他们的样子。如果你不喜欢某些部分的样式，可以去修改 &lt;code&gt;content.scss&lt;/code&gt; 和 &lt;code&gt;shortcodes.scss&lt;/code&gt; 这两个文件。预告一下，我所用的这个名为 &lt;code&gt;Nuo&lt;/code&gt; 的 &lt;code&gt;Hugo&lt;/code&gt; 也将于近期发布，敬请期待。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Fri, 09 Oct 2020 20:53:25 +0800</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>
